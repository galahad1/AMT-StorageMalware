package ch.heigvd.storagemalware.services;

import ch.heigvd.storagemalware.models.Malware;

import javax.annotation.Resource;
import javax.ejb.EJB;
import javax.ejb.Stateless;
import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * DAO to interact with the database
 */
@Stateless
public class MalwaresManager implements MalwaresManagerLocal {

    @Resource(lookup = "java:/jdbc/malware")
    private DataSource dataSource;

    /**
     * Ask dao service to get all malware in the database
     * @return list of malwares
     */
    @Override
    public List<Malware> getAllMalwares() {
        List<Malware> malwareList = new ArrayList<>();
        try {
            Connection connection = dataSource.getConnection();
            PreparedStatement pstmt = connection.prepareStatement("SELECT * FROM malware");
            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                long id = rs.getLong("malware_id");
                String name = rs.getString("name");
                String hash = rs.getString("hash");
                String category = rs.getString("category");
                String creation = rs.getString("creation");
                malwareList.add(new Malware(id, name, hash, category, creation));
            }
            connection.close();
        }catch (SQLException e) {
            e.printStackTrace();
        }
        return malwareList;
    }

    /**
     * Ask dao service to store a malware in the database
     * @param malware to store
     */
    @Override
    public void storeMalware(Malware malware) {
        try {
            Connection connection = dataSource.getConnection();
            PreparedStatement pstmt = connection.prepareStatement("INSERT INTO malware (name, hash, category, creation) " +
                    "VALUES (?,?,?,?)");
            pstmt.setString(1, malware.getName());
            pstmt.setString(2,malware.getHash());
            pstmt.setString(3,malware.getCategory());
            pstmt.setString(4,malware.getDate());
            pstmt.execute();
            connection.close();
        }catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void storeListMalware(List<Malware> malwareList) {
        for (Malware malware:malwareList) {
            storeMalware(malware);
        }
    }


}
