package ch.heigvd.storagemalware.web.controllers;


import ch.heigvd.storagemalware.models.Malware;
import ch.heigvd.storagemalware.services.MalwareCreationLocal;
import ch.heigvd.storagemalware.services.MalwareManagerLocal;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import static ch.heigvd.storagemalware.models.ValidatorForm.validateMalware;

/**
 * Servlet that hand /creation page
 *
 * @author Tano Iannetta and Wojciech Myszkorowski
 */
@WebServlet("/creation")
public class ServletCreation extends HttpServlet {

    @EJB
    MalwareCreationLocal malwareCreationLocal; // service
    @EJB
    MalwareManagerLocal malwareManagerLocal; // dao

    private static final String MALWARE = "malware";


    /**
     * Display creation page
     *
     * @param request  servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException      if an I/O error occurs
     */
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.getRequestDispatcher("/WEB-INF/views/creation.jsp").forward(request, response);
    }

    /**
     * @param request  servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException      if an I/O error occurs
     */
    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        try {
        /* Process form fields */
            String name = request.getParameter("name");
            String hash = request.getParameter("hash");
            String category = request.getParameter("category");
            String creation = request.getParameter("date");
            Map<String, String> errors = new HashMap<String, String>();

            //validation of the form
            validateMalware(name, hash, category, creation, errors);
            Malware malware = malwareCreationLocal.createMalware(name, hash, category, creation);

            malwareManagerLocal.storeMalware(malware);

            request.setAttribute(MALWARE, malware);
            request.setAttribute("form", errors);

            if (errors.size() == 0) {
                response.sendRedirect("./home");

            } else {
                request.getRequestDispatcher("/WEB-INF/views/creation.jsp").forward(request, response);
            }
        }catch (Exception e)
        {
            e.printStackTrace();
        }
    }
}